---
# Web Server configuration
server:
  address: ""                         # Address to listen on
  port: 8080                          # Port to listen on 
  timeout: 1000                       # Request timeout (milliseconds)
  tls_private_key: "" # stoke-private.key  # Private key to use for https TLS
  tls_public_cert: "" # stoke-public.crt   # Public key to use for https TLS
  disable_admin: false                # Disable the admin UI
  allowed_hosts:                      # Hosts to include in the allowed hosts CORS header
    - "*"

# Local database configuration
database:
  type: sqlite # Type of database to use ( sqlite, postgres or mysql )

  sqlite:
    file: stoke.db              # SQLite database file location
    flags: "cache=shared&_fk=1" # SQLite database flags

  postgres:
    host: 127.0.0.1    # Postgres server addres
    port: 5432         # Postgres server port
    database: "stoke"  # Postgres database name
    user: "stoke_user" # Postgres database user
    password: "pass"   # Postgres database password
    extra_args: ""     # Extra arguments to add at the end of the connection string

  mysql:
    host: 127.0.0.1    # Mysql server addres
    port: 3306         # Mysql server port
    database: "stoke"  # Mysql database name
    user: "stoke_user" # Mysql database user
    password: "pass"   # Mysql database password
    flags: ""          # Extra flags to add to the connection string

# Logging configuration
logging:
  level: debug           # Log level (trace, debug, info, error)
  log_file: ""           # Log file to write to. Creates if it does not exist.
  pretty_stdout: true    # Whether to prettify stdout logs
  write_to_stdout: true  # Whether to write to stdout at all

# Token generation and key rotation configuration
tokens:
  algorithm: ECDSA       # Algorithm to use for signing keys (ECDSA, EdDSA, or RSA)
  num_bits: 256          # Number of bits to use in the algorithm. Only applies for ECDSA or RSA (512, 384, or 256)

  persist_keys: true     # Whether to save private keys in the database
  key_duration: 3h       # How long signing keys are valid
  token_duration: 30m    # How long tokens are valid

  issuer: "stk"          # Issuer field in all tokens
  subject: ""            # Subject field in all tokens
  audience: []           # Audience field in all tokens
  include_issued_at: no  # Whether to set the issued at field in all tokens
  include_not_before: no # Whether to set the not before field in all tokens

  token_refresh_limit: 2      # Maximum number of refreshes per token. Set to 0 for unlimited
  token_refresh_count_key: "" # Claim to store the number of times token has been refreshed. Defaults to using the jti registered claim.

  user_info:
    full_name: "n" # Token field to hold full name
    username: "u"  # Token field to hold username
    email: "e"     # Token field to hold email
    first_name: "" # Token field to hold first name
    last_name: ""  # Token field to hold last name

# OpenTelemetry Configuration
telemetry:
  trace_provider: grpc                      # Type of trace provider. (http or grpc)
  trace_export_url: https://localhost:4317  # Where to publish traces
  trace_insecure: true                      # Whether to use insecure transport to export traces

  metric_provider: none                     # Type of metric provider. (http, grpc, or none)
  metric_export_url: https://localhost:4317 # Where to publish traces
  metric_insecure: false                    # Whether to use insecure transport to export metrics

  disable_monitoring: true                 # Whether to disable the default /metrics and /metrics/logs endpoints
  require_prometheus_authentication: false  # Whether to require authentication to reach default prometheus metrics

# User Provider configuration
users:
  create_stoke_claims: false                # Whether to create stoke administration claims for reading/writing claims/groups/users. Checked every start up.
  provider_config_dir: "./providers.d"      # Where to look for providers configuration files
  user_init_dir: "./dbinit.d"               # Where to look for database init files
  user_init_file: ""                        # Singular user init file. Overriden by the -dbinit argument
  policy_config:
    allow_superuser_override: false         # Whether a superuser can override protection policies
    read_only_mode: false                   # Whether to prevent all updates to users, claims and groups
    protected_users:                        # Disallow changes to the listed users by username
      - sadmin
    protected_claims:                       # Disallow changes to the listed claims by short name
      - stk
    protected_groups:                       # Disallow changes to the listed groups by group name
      - Stoke Superusers
  # providers: # Providers may be specified in the main config file as well.
