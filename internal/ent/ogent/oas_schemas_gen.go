// Code generated by ogen, DO NOT EDIT.

package ogent

import (
	"time"

	"github.com/go-faster/errors"
	"github.com/go-faster/jx"
)

type CapabilitiesOK struct {
	// List of enabled capabilites.
	Capabilities []string `json:"capabilities"`
}

// GetCapabilities returns the value of Capabilities.
func (s *CapabilitiesOK) GetCapabilities() []string {
	return s.Capabilities
}

// SetCapabilities sets the value of Capabilities.
func (s *CapabilitiesOK) SetCapabilities(val []string) {
	s.Capabilities = val
}

// Ref: #/components/schemas/Claim_ClaimGroupsList
type ClaimClaimGroupsList struct {
	ID          int    `json:"id"`
	Name        string `json:"name"`
	Description string `json:"description"`
}

// GetID returns the value of ID.
func (s *ClaimClaimGroupsList) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *ClaimClaimGroupsList) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *ClaimClaimGroupsList) GetDescription() string {
	return s.Description
}

// SetID sets the value of ID.
func (s *ClaimClaimGroupsList) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ClaimClaimGroupsList) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *ClaimClaimGroupsList) SetDescription(val string) {
	s.Description = val
}

// Ref: #/components/schemas/ClaimCreate
type ClaimCreate struct {
	ID          int    `json:"id"`
	Name        string `json:"name"`
	ShortName   string `json:"short_name"`
	Value       string `json:"value"`
	Description string `json:"description"`
}

// GetID returns the value of ID.
func (s *ClaimCreate) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *ClaimCreate) GetName() string {
	return s.Name
}

// GetShortName returns the value of ShortName.
func (s *ClaimCreate) GetShortName() string {
	return s.ShortName
}

// GetValue returns the value of Value.
func (s *ClaimCreate) GetValue() string {
	return s.Value
}

// GetDescription returns the value of Description.
func (s *ClaimCreate) GetDescription() string {
	return s.Description
}

// SetID sets the value of ID.
func (s *ClaimCreate) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ClaimCreate) SetName(val string) {
	s.Name = val
}

// SetShortName sets the value of ShortName.
func (s *ClaimCreate) SetShortName(val string) {
	s.ShortName = val
}

// SetValue sets the value of Value.
func (s *ClaimCreate) SetValue(val string) {
	s.Value = val
}

// SetDescription sets the value of Description.
func (s *ClaimCreate) SetDescription(val string) {
	s.Description = val
}

func (*ClaimCreate) createClaimRes() {}

// Ref: #/components/schemas/ClaimGroup_ClaimsList
type ClaimGroupClaimsList struct {
	ID          int    `json:"id"`
	Name        string `json:"name"`
	ShortName   string `json:"short_name"`
	Value       string `json:"value"`
	Description string `json:"description"`
}

// GetID returns the value of ID.
func (s *ClaimGroupClaimsList) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *ClaimGroupClaimsList) GetName() string {
	return s.Name
}

// GetShortName returns the value of ShortName.
func (s *ClaimGroupClaimsList) GetShortName() string {
	return s.ShortName
}

// GetValue returns the value of Value.
func (s *ClaimGroupClaimsList) GetValue() string {
	return s.Value
}

// GetDescription returns the value of Description.
func (s *ClaimGroupClaimsList) GetDescription() string {
	return s.Description
}

// SetID sets the value of ID.
func (s *ClaimGroupClaimsList) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ClaimGroupClaimsList) SetName(val string) {
	s.Name = val
}

// SetShortName sets the value of ShortName.
func (s *ClaimGroupClaimsList) SetShortName(val string) {
	s.ShortName = val
}

// SetValue sets the value of Value.
func (s *ClaimGroupClaimsList) SetValue(val string) {
	s.Value = val
}

// SetDescription sets the value of Description.
func (s *ClaimGroupClaimsList) SetDescription(val string) {
	s.Description = val
}

// Ref: #/components/schemas/ClaimGroupCreate
type ClaimGroupCreate struct {
	ID          int    `json:"id"`
	Name        string `json:"name"`
	Description string `json:"description"`
}

// GetID returns the value of ID.
func (s *ClaimGroupCreate) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *ClaimGroupCreate) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *ClaimGroupCreate) GetDescription() string {
	return s.Description
}

// SetID sets the value of ID.
func (s *ClaimGroupCreate) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ClaimGroupCreate) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *ClaimGroupCreate) SetDescription(val string) {
	s.Description = val
}

func (*ClaimGroupCreate) createClaimGroupRes() {}

// Ref: #/components/schemas/ClaimGroup_GroupLinksList
type ClaimGroupGroupLinksList struct {
	ID           int    `json:"id"`
	Type         string `json:"type"`
	ResourceSpec string `json:"resource_spec"`
}

// GetID returns the value of ID.
func (s *ClaimGroupGroupLinksList) GetID() int {
	return s.ID
}

// GetType returns the value of Type.
func (s *ClaimGroupGroupLinksList) GetType() string {
	return s.Type
}

// GetResourceSpec returns the value of ResourceSpec.
func (s *ClaimGroupGroupLinksList) GetResourceSpec() string {
	return s.ResourceSpec
}

// SetID sets the value of ID.
func (s *ClaimGroupGroupLinksList) SetID(val int) {
	s.ID = val
}

// SetType sets the value of Type.
func (s *ClaimGroupGroupLinksList) SetType(val string) {
	s.Type = val
}

// SetResourceSpec sets the value of ResourceSpec.
func (s *ClaimGroupGroupLinksList) SetResourceSpec(val string) {
	s.ResourceSpec = val
}

// Ref: #/components/schemas/ClaimGroupList
type ClaimGroupList struct {
	ID          int    `json:"id"`
	Name        string `json:"name"`
	Description string `json:"description"`
}

// GetID returns the value of ID.
func (s *ClaimGroupList) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *ClaimGroupList) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *ClaimGroupList) GetDescription() string {
	return s.Description
}

// SetID sets the value of ID.
func (s *ClaimGroupList) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ClaimGroupList) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *ClaimGroupList) SetDescription(val string) {
	s.Description = val
}

// Ref: #/components/schemas/ClaimGroupRead
type ClaimGroupRead struct {
	ID          int    `json:"id"`
	Name        string `json:"name"`
	Description string `json:"description"`
}

// GetID returns the value of ID.
func (s *ClaimGroupRead) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *ClaimGroupRead) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *ClaimGroupRead) GetDescription() string {
	return s.Description
}

// SetID sets the value of ID.
func (s *ClaimGroupRead) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ClaimGroupRead) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *ClaimGroupRead) SetDescription(val string) {
	s.Description = val
}

func (*ClaimGroupRead) readClaimGroupRes() {}

// Ref: #/components/schemas/ClaimGroupUpdate
type ClaimGroupUpdate struct {
	ID          int    `json:"id"`
	Name        string `json:"name"`
	Description string `json:"description"`
}

// GetID returns the value of ID.
func (s *ClaimGroupUpdate) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *ClaimGroupUpdate) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *ClaimGroupUpdate) GetDescription() string {
	return s.Description
}

// SetID sets the value of ID.
func (s *ClaimGroupUpdate) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ClaimGroupUpdate) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *ClaimGroupUpdate) SetDescription(val string) {
	s.Description = val
}

func (*ClaimGroupUpdate) updateClaimGroupRes() {}

// Ref: #/components/schemas/ClaimGroup_UsersList
type ClaimGroupUsersList struct {
	ID        int       `json:"id"`
	Fname     string    `json:"fname"`
	Lname     string    `json:"lname"`
	Source    string    `json:"source"`
	Email     string    `json:"email"`
	Username  string    `json:"username"`
	CreatedAt time.Time `json:"created_at"`
}

// GetID returns the value of ID.
func (s *ClaimGroupUsersList) GetID() int {
	return s.ID
}

// GetFname returns the value of Fname.
func (s *ClaimGroupUsersList) GetFname() string {
	return s.Fname
}

// GetLname returns the value of Lname.
func (s *ClaimGroupUsersList) GetLname() string {
	return s.Lname
}

// GetSource returns the value of Source.
func (s *ClaimGroupUsersList) GetSource() string {
	return s.Source
}

// GetEmail returns the value of Email.
func (s *ClaimGroupUsersList) GetEmail() string {
	return s.Email
}

// GetUsername returns the value of Username.
func (s *ClaimGroupUsersList) GetUsername() string {
	return s.Username
}

// GetCreatedAt returns the value of CreatedAt.
func (s *ClaimGroupUsersList) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *ClaimGroupUsersList) SetID(val int) {
	s.ID = val
}

// SetFname sets the value of Fname.
func (s *ClaimGroupUsersList) SetFname(val string) {
	s.Fname = val
}

// SetLname sets the value of Lname.
func (s *ClaimGroupUsersList) SetLname(val string) {
	s.Lname = val
}

// SetSource sets the value of Source.
func (s *ClaimGroupUsersList) SetSource(val string) {
	s.Source = val
}

// SetEmail sets the value of Email.
func (s *ClaimGroupUsersList) SetEmail(val string) {
	s.Email = val
}

// SetUsername sets the value of Username.
func (s *ClaimGroupUsersList) SetUsername(val string) {
	s.Username = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *ClaimGroupUsersList) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// Ref: #/components/schemas/ClaimList
type ClaimList struct {
	ID          int    `json:"id"`
	Name        string `json:"name"`
	ShortName   string `json:"short_name"`
	Value       string `json:"value"`
	Description string `json:"description"`
}

// GetID returns the value of ID.
func (s *ClaimList) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *ClaimList) GetName() string {
	return s.Name
}

// GetShortName returns the value of ShortName.
func (s *ClaimList) GetShortName() string {
	return s.ShortName
}

// GetValue returns the value of Value.
func (s *ClaimList) GetValue() string {
	return s.Value
}

// GetDescription returns the value of Description.
func (s *ClaimList) GetDescription() string {
	return s.Description
}

// SetID sets the value of ID.
func (s *ClaimList) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ClaimList) SetName(val string) {
	s.Name = val
}

// SetShortName sets the value of ShortName.
func (s *ClaimList) SetShortName(val string) {
	s.ShortName = val
}

// SetValue sets the value of Value.
func (s *ClaimList) SetValue(val string) {
	s.Value = val
}

// SetDescription sets the value of Description.
func (s *ClaimList) SetDescription(val string) {
	s.Description = val
}

// Ref: #/components/schemas/ClaimRead
type ClaimRead struct {
	ID          int    `json:"id"`
	Name        string `json:"name"`
	ShortName   string `json:"short_name"`
	Value       string `json:"value"`
	Description string `json:"description"`
}

// GetID returns the value of ID.
func (s *ClaimRead) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *ClaimRead) GetName() string {
	return s.Name
}

// GetShortName returns the value of ShortName.
func (s *ClaimRead) GetShortName() string {
	return s.ShortName
}

// GetValue returns the value of Value.
func (s *ClaimRead) GetValue() string {
	return s.Value
}

// GetDescription returns the value of Description.
func (s *ClaimRead) GetDescription() string {
	return s.Description
}

// SetID sets the value of ID.
func (s *ClaimRead) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ClaimRead) SetName(val string) {
	s.Name = val
}

// SetShortName sets the value of ShortName.
func (s *ClaimRead) SetShortName(val string) {
	s.ShortName = val
}

// SetValue sets the value of Value.
func (s *ClaimRead) SetValue(val string) {
	s.Value = val
}

// SetDescription sets the value of Description.
func (s *ClaimRead) SetDescription(val string) {
	s.Description = val
}

func (*ClaimRead) readClaimRes() {}

// Ref: #/components/schemas/ClaimUpdate
type ClaimUpdate struct {
	ID          int    `json:"id"`
	Name        string `json:"name"`
	ShortName   string `json:"short_name"`
	Value       string `json:"value"`
	Description string `json:"description"`
}

// GetID returns the value of ID.
func (s *ClaimUpdate) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *ClaimUpdate) GetName() string {
	return s.Name
}

// GetShortName returns the value of ShortName.
func (s *ClaimUpdate) GetShortName() string {
	return s.ShortName
}

// GetValue returns the value of Value.
func (s *ClaimUpdate) GetValue() string {
	return s.Value
}

// GetDescription returns the value of Description.
func (s *ClaimUpdate) GetDescription() string {
	return s.Description
}

// SetID sets the value of ID.
func (s *ClaimUpdate) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ClaimUpdate) SetName(val string) {
	s.Name = val
}

// SetShortName sets the value of ShortName.
func (s *ClaimUpdate) SetShortName(val string) {
	s.ShortName = val
}

// SetValue sets the value of Value.
func (s *ClaimUpdate) SetValue(val string) {
	s.Value = val
}

// SetDescription sets the value of Description.
func (s *ClaimUpdate) SetDescription(val string) {
	s.Description = val
}

func (*ClaimUpdate) updateClaimRes() {}

type CreateClaimGroupReq struct {
	Name        string `json:"name"`
	Description string `json:"description"`
	Users       []int  `json:"users"`
	GroupLinks  []int  `json:"group_links"`
	Claims      []int  `json:"claims"`
}

// GetName returns the value of Name.
func (s *CreateClaimGroupReq) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *CreateClaimGroupReq) GetDescription() string {
	return s.Description
}

// GetUsers returns the value of Users.
func (s *CreateClaimGroupReq) GetUsers() []int {
	return s.Users
}

// GetGroupLinks returns the value of GroupLinks.
func (s *CreateClaimGroupReq) GetGroupLinks() []int {
	return s.GroupLinks
}

// GetClaims returns the value of Claims.
func (s *CreateClaimGroupReq) GetClaims() []int {
	return s.Claims
}

// SetName sets the value of Name.
func (s *CreateClaimGroupReq) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *CreateClaimGroupReq) SetDescription(val string) {
	s.Description = val
}

// SetUsers sets the value of Users.
func (s *CreateClaimGroupReq) SetUsers(val []int) {
	s.Users = val
}

// SetGroupLinks sets the value of GroupLinks.
func (s *CreateClaimGroupReq) SetGroupLinks(val []int) {
	s.GroupLinks = val
}

// SetClaims sets the value of Claims.
func (s *CreateClaimGroupReq) SetClaims(val []int) {
	s.Claims = val
}

type CreateClaimReq struct {
	Name        string `json:"name"`
	ShortName   string `json:"short_name"`
	Value       string `json:"value"`
	Description string `json:"description"`
	ClaimGroups []int  `json:"claim_groups"`
}

// GetName returns the value of Name.
func (s *CreateClaimReq) GetName() string {
	return s.Name
}

// GetShortName returns the value of ShortName.
func (s *CreateClaimReq) GetShortName() string {
	return s.ShortName
}

// GetValue returns the value of Value.
func (s *CreateClaimReq) GetValue() string {
	return s.Value
}

// GetDescription returns the value of Description.
func (s *CreateClaimReq) GetDescription() string {
	return s.Description
}

// GetClaimGroups returns the value of ClaimGroups.
func (s *CreateClaimReq) GetClaimGroups() []int {
	return s.ClaimGroups
}

// SetName sets the value of Name.
func (s *CreateClaimReq) SetName(val string) {
	s.Name = val
}

// SetShortName sets the value of ShortName.
func (s *CreateClaimReq) SetShortName(val string) {
	s.ShortName = val
}

// SetValue sets the value of Value.
func (s *CreateClaimReq) SetValue(val string) {
	s.Value = val
}

// SetDescription sets the value of Description.
func (s *CreateClaimReq) SetDescription(val string) {
	s.Description = val
}

// SetClaimGroups sets the value of ClaimGroups.
func (s *CreateClaimReq) SetClaimGroups(val []int) {
	s.ClaimGroups = val
}

type CreateGroupLinkReq struct {
	Type         string `json:"type"`
	ResourceSpec string `json:"resource_spec"`
	ClaimGroup   OptInt `json:"claim_group"`
}

// GetType returns the value of Type.
func (s *CreateGroupLinkReq) GetType() string {
	return s.Type
}

// GetResourceSpec returns the value of ResourceSpec.
func (s *CreateGroupLinkReq) GetResourceSpec() string {
	return s.ResourceSpec
}

// GetClaimGroup returns the value of ClaimGroup.
func (s *CreateGroupLinkReq) GetClaimGroup() OptInt {
	return s.ClaimGroup
}

// SetType sets the value of Type.
func (s *CreateGroupLinkReq) SetType(val string) {
	s.Type = val
}

// SetResourceSpec sets the value of ResourceSpec.
func (s *CreateGroupLinkReq) SetResourceSpec(val string) {
	s.ResourceSpec = val
}

// SetClaimGroup sets the value of ClaimGroup.
func (s *CreateGroupLinkReq) SetClaimGroup(val OptInt) {
	s.ClaimGroup = val
}

type CreateLocalUserBadRequest struct {
	// Error Message.
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *CreateLocalUserBadRequest) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *CreateLocalUserBadRequest) SetMessage(val string) {
	s.Message = val
}

func (*CreateLocalUserBadRequest) createLocalUserRes() {}

type CreateLocalUserOK struct {
	Message OptString `json:"message"`
}

// GetMessage returns the value of Message.
func (s *CreateLocalUserOK) GetMessage() OptString {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *CreateLocalUserOK) SetMessage(val OptString) {
	s.Message = val
}

func (*CreateLocalUserOK) createLocalUserRes() {}

// User to create.
type CreateLocalUserReq struct {
	// New user's first name.
	Fname string `json:"fname"`
	// New user's last name.
	Lname string `json:"lname"`
	// New user's username.
	Username string `json:"username"`
	// New user's email.
	Email string `json:"email"`
	// New user's password.
	Password string `json:"password"`
}

// GetFname returns the value of Fname.
func (s *CreateLocalUserReq) GetFname() string {
	return s.Fname
}

// GetLname returns the value of Lname.
func (s *CreateLocalUserReq) GetLname() string {
	return s.Lname
}

// GetUsername returns the value of Username.
func (s *CreateLocalUserReq) GetUsername() string {
	return s.Username
}

// GetEmail returns the value of Email.
func (s *CreateLocalUserReq) GetEmail() string {
	return s.Email
}

// GetPassword returns the value of Password.
func (s *CreateLocalUserReq) GetPassword() string {
	return s.Password
}

// SetFname sets the value of Fname.
func (s *CreateLocalUserReq) SetFname(val string) {
	s.Fname = val
}

// SetLname sets the value of Lname.
func (s *CreateLocalUserReq) SetLname(val string) {
	s.Lname = val
}

// SetUsername sets the value of Username.
func (s *CreateLocalUserReq) SetUsername(val string) {
	s.Username = val
}

// SetEmail sets the value of Email.
func (s *CreateLocalUserReq) SetEmail(val string) {
	s.Email = val
}

// SetPassword sets the value of Password.
func (s *CreateLocalUserReq) SetPassword(val string) {
	s.Password = val
}

// DeleteClaimGroupNoContent is response for DeleteClaimGroup operation.
type DeleteClaimGroupNoContent struct{}

func (*DeleteClaimGroupNoContent) deleteClaimGroupRes() {}

// DeleteClaimNoContent is response for DeleteClaim operation.
type DeleteClaimNoContent struct{}

func (*DeleteClaimNoContent) deleteClaimRes() {}

// DeleteGroupLinkNoContent is response for DeleteGroupLink operation.
type DeleteGroupLinkNoContent struct{}

func (*DeleteGroupLinkNoContent) deleteGroupLinkRes() {}

// DeleteUserNoContent is response for DeleteUser operation.
type DeleteUserNoContent struct{}

func (*DeleteUserNoContent) deleteUserRes() {}

// Ref: #/components/schemas/GroupLink_ClaimGroupRead
type GroupLinkClaimGroupRead struct {
	ID          int    `json:"id"`
	Name        string `json:"name"`
	Description string `json:"description"`
}

// GetID returns the value of ID.
func (s *GroupLinkClaimGroupRead) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *GroupLinkClaimGroupRead) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *GroupLinkClaimGroupRead) GetDescription() string {
	return s.Description
}

// SetID sets the value of ID.
func (s *GroupLinkClaimGroupRead) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GroupLinkClaimGroupRead) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *GroupLinkClaimGroupRead) SetDescription(val string) {
	s.Description = val
}

func (*GroupLinkClaimGroupRead) readGroupLinkClaimGroupRes() {}

// Ref: #/components/schemas/GroupLinkCreate
type GroupLinkCreate struct {
	ID           int    `json:"id"`
	Type         string `json:"type"`
	ResourceSpec string `json:"resource_spec"`
}

// GetID returns the value of ID.
func (s *GroupLinkCreate) GetID() int {
	return s.ID
}

// GetType returns the value of Type.
func (s *GroupLinkCreate) GetType() string {
	return s.Type
}

// GetResourceSpec returns the value of ResourceSpec.
func (s *GroupLinkCreate) GetResourceSpec() string {
	return s.ResourceSpec
}

// SetID sets the value of ID.
func (s *GroupLinkCreate) SetID(val int) {
	s.ID = val
}

// SetType sets the value of Type.
func (s *GroupLinkCreate) SetType(val string) {
	s.Type = val
}

// SetResourceSpec sets the value of ResourceSpec.
func (s *GroupLinkCreate) SetResourceSpec(val string) {
	s.ResourceSpec = val
}

func (*GroupLinkCreate) createGroupLinkRes() {}

// Ref: #/components/schemas/GroupLinkList
type GroupLinkList struct {
	ID           int    `json:"id"`
	Type         string `json:"type"`
	ResourceSpec string `json:"resource_spec"`
}

// GetID returns the value of ID.
func (s *GroupLinkList) GetID() int {
	return s.ID
}

// GetType returns the value of Type.
func (s *GroupLinkList) GetType() string {
	return s.Type
}

// GetResourceSpec returns the value of ResourceSpec.
func (s *GroupLinkList) GetResourceSpec() string {
	return s.ResourceSpec
}

// SetID sets the value of ID.
func (s *GroupLinkList) SetID(val int) {
	s.ID = val
}

// SetType sets the value of Type.
func (s *GroupLinkList) SetType(val string) {
	s.Type = val
}

// SetResourceSpec sets the value of ResourceSpec.
func (s *GroupLinkList) SetResourceSpec(val string) {
	s.ResourceSpec = val
}

// Ref: #/components/schemas/GroupLinkRead
type GroupLinkRead struct {
	ID           int    `json:"id"`
	Type         string `json:"type"`
	ResourceSpec string `json:"resource_spec"`
}

// GetID returns the value of ID.
func (s *GroupLinkRead) GetID() int {
	return s.ID
}

// GetType returns the value of Type.
func (s *GroupLinkRead) GetType() string {
	return s.Type
}

// GetResourceSpec returns the value of ResourceSpec.
func (s *GroupLinkRead) GetResourceSpec() string {
	return s.ResourceSpec
}

// SetID sets the value of ID.
func (s *GroupLinkRead) SetID(val int) {
	s.ID = val
}

// SetType sets the value of Type.
func (s *GroupLinkRead) SetType(val string) {
	s.Type = val
}

// SetResourceSpec sets the value of ResourceSpec.
func (s *GroupLinkRead) SetResourceSpec(val string) {
	s.ResourceSpec = val
}

func (*GroupLinkRead) readGroupLinkRes() {}

// Ref: #/components/schemas/GroupLinkUpdate
type GroupLinkUpdate struct {
	ID           int    `json:"id"`
	Type         string `json:"type"`
	ResourceSpec string `json:"resource_spec"`
}

// GetID returns the value of ID.
func (s *GroupLinkUpdate) GetID() int {
	return s.ID
}

// GetType returns the value of Type.
func (s *GroupLinkUpdate) GetType() string {
	return s.Type
}

// GetResourceSpec returns the value of ResourceSpec.
func (s *GroupLinkUpdate) GetResourceSpec() string {
	return s.ResourceSpec
}

// SetID sets the value of ID.
func (s *GroupLinkUpdate) SetID(val int) {
	s.ID = val
}

// SetType sets the value of Type.
func (s *GroupLinkUpdate) SetType(val string) {
	s.Type = val
}

// SetResourceSpec sets the value of ResourceSpec.
func (s *GroupLinkUpdate) SetResourceSpec(val string) {
	s.ResourceSpec = val
}

func (*GroupLinkUpdate) updateGroupLinkRes() {}

type ListClaimClaimGroupsOKApplicationJSON []ClaimClaimGroupsList

func (*ListClaimClaimGroupsOKApplicationJSON) listClaimClaimGroupsRes() {}

type ListClaimGroupClaimsOKApplicationJSON []ClaimGroupClaimsList

func (*ListClaimGroupClaimsOKApplicationJSON) listClaimGroupClaimsRes() {}

type ListClaimGroupGroupLinksOKApplicationJSON []ClaimGroupGroupLinksList

func (*ListClaimGroupGroupLinksOKApplicationJSON) listClaimGroupGroupLinksRes() {}

type ListClaimGroupOKApplicationJSON []ClaimGroupList

func (*ListClaimGroupOKApplicationJSON) listClaimGroupRes() {}

type ListClaimGroupUsersOKApplicationJSON []ClaimGroupUsersList

func (*ListClaimGroupUsersOKApplicationJSON) listClaimGroupUsersRes() {}

type ListClaimOKApplicationJSON []ClaimList

func (*ListClaimOKApplicationJSON) listClaimRes() {}

type ListGroupLinkOKApplicationJSON []GroupLinkList

func (*ListGroupLinkOKApplicationJSON) listGroupLinkRes() {}

type ListPrivateKeyOKApplicationJSON []PrivateKeyList

func (*ListPrivateKeyOKApplicationJSON) listPrivateKeyRes() {}

type ListUserClaimGroupsOKApplicationJSON []UserClaimGroupsList

func (*ListUserClaimGroupsOKApplicationJSON) listUserClaimGroupsRes() {}

type ListUserOKApplicationJSON []UserList

func (*ListUserOKApplicationJSON) listUserRes() {}

type LoginBadRequest struct {
	// Error Message.
	Message OptString `json:"message"`
}

// GetMessage returns the value of Message.
func (s *LoginBadRequest) GetMessage() OptString {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *LoginBadRequest) SetMessage(val OptString) {
	s.Message = val
}

func (*LoginBadRequest) loginRes() {}

type LoginOK struct {
	// JWT Token.
	Token string `json:"token"`
	// Token to get a new token with the same claims. Must be used before token expires.
	Refresh string `json:"refresh"`
}

// GetToken returns the value of Token.
func (s *LoginOK) GetToken() string {
	return s.Token
}

// GetRefresh returns the value of Refresh.
func (s *LoginOK) GetRefresh() string {
	return s.Refresh
}

// SetToken sets the value of Token.
func (s *LoginOK) SetToken(val string) {
	s.Token = val
}

// SetRefresh sets the value of Refresh.
func (s *LoginOK) SetRefresh(val string) {
	s.Refresh = val
}

func (*LoginOK) loginRes() {}

// User credentials.
type LoginReq struct {
	// User's username.
	Username string `json:"username"`
	// User's password.
	Password string `json:"password"`
	// Claims required to receive a token.
	RequiredClaims []LoginReqRequiredClaimsItem `json:"required_claims"`
}

// GetUsername returns the value of Username.
func (s *LoginReq) GetUsername() string {
	return s.Username
}

// GetPassword returns the value of Password.
func (s *LoginReq) GetPassword() string {
	return s.Password
}

// GetRequiredClaims returns the value of RequiredClaims.
func (s *LoginReq) GetRequiredClaims() []LoginReqRequiredClaimsItem {
	return s.RequiredClaims
}

// SetUsername sets the value of Username.
func (s *LoginReq) SetUsername(val string) {
	s.Username = val
}

// SetPassword sets the value of Password.
func (s *LoginReq) SetPassword(val string) {
	s.Password = val
}

// SetRequiredClaims sets the value of RequiredClaims.
func (s *LoginReq) SetRequiredClaims(val []LoginReqRequiredClaimsItem) {
	s.RequiredClaims = val
}

type LoginReqRequiredClaimsItem struct {
	// Required claim name.
	Name string `json:"name"`
	// Required claim value.
	Value string `json:"value"`
}

// GetName returns the value of Name.
func (s *LoginReqRequiredClaimsItem) GetName() string {
	return s.Name
}

// GetValue returns the value of Value.
func (s *LoginReqRequiredClaimsItem) GetValue() string {
	return s.Value
}

// SetName sets the value of Name.
func (s *LoginReqRequiredClaimsItem) SetName(val string) {
	s.Name = val
}

// SetValue sets the value of Value.
func (s *LoginReqRequiredClaimsItem) SetValue(val string) {
	s.Value = val
}

type LoginUnauthorized struct {
	// Error Message.
	Message OptString `json:"message"`
}

// GetMessage returns the value of Message.
func (s *LoginUnauthorized) GetMessage() OptString {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *LoginUnauthorized) SetMessage(val OptString) {
	s.Message = val
}

func (*LoginUnauthorized) loginRes() {}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPkeysOKKeysItemCrv returns new OptPkeysOKKeysItemCrv with value set to v.
func NewOptPkeysOKKeysItemCrv(v PkeysOKKeysItemCrv) OptPkeysOKKeysItemCrv {
	return OptPkeysOKKeysItemCrv{
		Value: v,
		Set:   true,
	}
}

// OptPkeysOKKeysItemCrv is optional PkeysOKKeysItemCrv.
type OptPkeysOKKeysItemCrv struct {
	Value PkeysOKKeysItemCrv
	Set   bool
}

// IsSet returns true if OptPkeysOKKeysItemCrv was set.
func (o OptPkeysOKKeysItemCrv) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPkeysOKKeysItemCrv) Reset() {
	var v PkeysOKKeysItemCrv
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPkeysOKKeysItemCrv) SetTo(v PkeysOKKeysItemCrv) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPkeysOKKeysItemCrv) Get() (v PkeysOKKeysItemCrv, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPkeysOKKeysItemCrv) Or(d PkeysOKKeysItemCrv) PkeysOKKeysItemCrv {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPkeysOKKeysItemKty returns new OptPkeysOKKeysItemKty with value set to v.
func NewOptPkeysOKKeysItemKty(v PkeysOKKeysItemKty) OptPkeysOKKeysItemKty {
	return OptPkeysOKKeysItemKty{
		Value: v,
		Set:   true,
	}
}

// OptPkeysOKKeysItemKty is optional PkeysOKKeysItemKty.
type OptPkeysOKKeysItemKty struct {
	Value PkeysOKKeysItemKty
	Set   bool
}

// IsSet returns true if OptPkeysOKKeysItemKty was set.
func (o OptPkeysOKKeysItemKty) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPkeysOKKeysItemKty) Reset() {
	var v PkeysOKKeysItemKty
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPkeysOKKeysItemKty) SetTo(v PkeysOKKeysItemKty) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPkeysOKKeysItemKty) Get() (v PkeysOKKeysItemKty, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPkeysOKKeysItemKty) Or(d PkeysOKKeysItemKty) PkeysOKKeysItemKty {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type PkeysOK struct {
	// Next key expiring time, next time to pull public keys.
	Expires OptDateTime       `json:"expires"`
	Keys    []PkeysOKKeysItem `json:"keys"`
}

// GetExpires returns the value of Expires.
func (s *PkeysOK) GetExpires() OptDateTime {
	return s.Expires
}

// GetKeys returns the value of Keys.
func (s *PkeysOK) GetKeys() []PkeysOKKeysItem {
	return s.Keys
}

// SetExpires sets the value of Expires.
func (s *PkeysOK) SetExpires(val OptDateTime) {
	s.Expires = val
}

// SetKeys sets the value of Keys.
func (s *PkeysOK) SetKeys(val []PkeysOKKeysItem) {
	s.Keys = val
}

type PkeysOKKeysItem struct {
	// Key Type.
	Kty OptPkeysOKKeysItemKty `json:"kty"`
	// Key usage.
	Use OptString `json:"use"`
	// Key identifier.
	Kid OptString `json:"kid"`
	// ECDSA/EdDSA Curve.
	Crv OptPkeysOKKeysItemCrv `json:"crv"`
	// URL encoded base64 ECDSA/EdDSA X.
	X OptString `json:"x"`
	// URL encoded base64 ECDSA Y.
	Y OptString `json:"y"`
	// URL encoded base64 RSA N.
	N OptString `json:"n"`
	// URL encoded base64 RSA E.
	E OptString `json:"e"`
}

// GetKty returns the value of Kty.
func (s *PkeysOKKeysItem) GetKty() OptPkeysOKKeysItemKty {
	return s.Kty
}

// GetUse returns the value of Use.
func (s *PkeysOKKeysItem) GetUse() OptString {
	return s.Use
}

// GetKid returns the value of Kid.
func (s *PkeysOKKeysItem) GetKid() OptString {
	return s.Kid
}

// GetCrv returns the value of Crv.
func (s *PkeysOKKeysItem) GetCrv() OptPkeysOKKeysItemCrv {
	return s.Crv
}

// GetX returns the value of X.
func (s *PkeysOKKeysItem) GetX() OptString {
	return s.X
}

// GetY returns the value of Y.
func (s *PkeysOKKeysItem) GetY() OptString {
	return s.Y
}

// GetN returns the value of N.
func (s *PkeysOKKeysItem) GetN() OptString {
	return s.N
}

// GetE returns the value of E.
func (s *PkeysOKKeysItem) GetE() OptString {
	return s.E
}

// SetKty sets the value of Kty.
func (s *PkeysOKKeysItem) SetKty(val OptPkeysOKKeysItemKty) {
	s.Kty = val
}

// SetUse sets the value of Use.
func (s *PkeysOKKeysItem) SetUse(val OptString) {
	s.Use = val
}

// SetKid sets the value of Kid.
func (s *PkeysOKKeysItem) SetKid(val OptString) {
	s.Kid = val
}

// SetCrv sets the value of Crv.
func (s *PkeysOKKeysItem) SetCrv(val OptPkeysOKKeysItemCrv) {
	s.Crv = val
}

// SetX sets the value of X.
func (s *PkeysOKKeysItem) SetX(val OptString) {
	s.X = val
}

// SetY sets the value of Y.
func (s *PkeysOKKeysItem) SetY(val OptString) {
	s.Y = val
}

// SetN sets the value of N.
func (s *PkeysOKKeysItem) SetN(val OptString) {
	s.N = val
}

// SetE sets the value of E.
func (s *PkeysOKKeysItem) SetE(val OptString) {
	s.E = val
}

// ECDSA/EdDSA Curve.
type PkeysOKKeysItemCrv string

const (
	PkeysOKKeysItemCrvP256 PkeysOKKeysItemCrv = "P-256"
	PkeysOKKeysItemCrvP384 PkeysOKKeysItemCrv = "P-384"
	PkeysOKKeysItemCrvP521 PkeysOKKeysItemCrv = "P-521"
)

// AllValues returns all PkeysOKKeysItemCrv values.
func (PkeysOKKeysItemCrv) AllValues() []PkeysOKKeysItemCrv {
	return []PkeysOKKeysItemCrv{
		PkeysOKKeysItemCrvP256,
		PkeysOKKeysItemCrvP384,
		PkeysOKKeysItemCrvP521,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PkeysOKKeysItemCrv) MarshalText() ([]byte, error) {
	switch s {
	case PkeysOKKeysItemCrvP256:
		return []byte(s), nil
	case PkeysOKKeysItemCrvP384:
		return []byte(s), nil
	case PkeysOKKeysItemCrvP521:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PkeysOKKeysItemCrv) UnmarshalText(data []byte) error {
	switch PkeysOKKeysItemCrv(data) {
	case PkeysOKKeysItemCrvP256:
		*s = PkeysOKKeysItemCrvP256
		return nil
	case PkeysOKKeysItemCrvP384:
		*s = PkeysOKKeysItemCrvP384
		return nil
	case PkeysOKKeysItemCrvP521:
		*s = PkeysOKKeysItemCrvP521
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Key Type.
type PkeysOKKeysItemKty string

const (
	PkeysOKKeysItemKtyEC  PkeysOKKeysItemKty = "EC"
	PkeysOKKeysItemKtyRSA PkeysOKKeysItemKty = "RSA"
	PkeysOKKeysItemKtyOKP PkeysOKKeysItemKty = "OKP"
)

// AllValues returns all PkeysOKKeysItemKty values.
func (PkeysOKKeysItemKty) AllValues() []PkeysOKKeysItemKty {
	return []PkeysOKKeysItemKty{
		PkeysOKKeysItemKtyEC,
		PkeysOKKeysItemKtyRSA,
		PkeysOKKeysItemKtyOKP,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PkeysOKKeysItemKty) MarshalText() ([]byte, error) {
	switch s {
	case PkeysOKKeysItemKtyEC:
		return []byte(s), nil
	case PkeysOKKeysItemKtyRSA:
		return []byte(s), nil
	case PkeysOKKeysItemKtyOKP:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PkeysOKKeysItemKty) UnmarshalText(data []byte) error {
	switch PkeysOKKeysItemKty(data) {
	case PkeysOKKeysItemKtyEC:
		*s = PkeysOKKeysItemKtyEC
		return nil
	case PkeysOKKeysItemKtyRSA:
		*s = PkeysOKKeysItemKtyRSA
		return nil
	case PkeysOKKeysItemKtyOKP:
		*s = PkeysOKKeysItemKtyOKP
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/PrivateKeyList
type PrivateKeyList struct {
	ID      int       `json:"id"`
	Text    string    `json:"text"`
	Expires time.Time `json:"expires"`
}

// GetID returns the value of ID.
func (s *PrivateKeyList) GetID() int {
	return s.ID
}

// GetText returns the value of Text.
func (s *PrivateKeyList) GetText() string {
	return s.Text
}

// GetExpires returns the value of Expires.
func (s *PrivateKeyList) GetExpires() time.Time {
	return s.Expires
}

// SetID sets the value of ID.
func (s *PrivateKeyList) SetID(val int) {
	s.ID = val
}

// SetText sets the value of Text.
func (s *PrivateKeyList) SetText(val string) {
	s.Text = val
}

// SetExpires sets the value of Expires.
func (s *PrivateKeyList) SetExpires(val time.Time) {
	s.Expires = val
}

// Ref: #/components/schemas/PrivateKeyRead
type PrivateKeyRead struct {
	ID      int       `json:"id"`
	Text    string    `json:"text"`
	Expires time.Time `json:"expires"`
}

// GetID returns the value of ID.
func (s *PrivateKeyRead) GetID() int {
	return s.ID
}

// GetText returns the value of Text.
func (s *PrivateKeyRead) GetText() string {
	return s.Text
}

// GetExpires returns the value of Expires.
func (s *PrivateKeyRead) GetExpires() time.Time {
	return s.Expires
}

// SetID sets the value of ID.
func (s *PrivateKeyRead) SetID(val int) {
	s.ID = val
}

// SetText sets the value of Text.
func (s *PrivateKeyRead) SetText(val string) {
	s.Text = val
}

// SetExpires sets the value of Expires.
func (s *PrivateKeyRead) SetExpires(val time.Time) {
	s.Expires = val
}

func (*PrivateKeyRead) readPrivateKeyRes() {}

type R400 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R400) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R400) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R400) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R400) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R400) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R400) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R400) createClaimGroupRes()         {}
func (*R400) createClaimRes()              {}
func (*R400) createGroupLinkRes()          {}
func (*R400) deleteClaimGroupRes()         {}
func (*R400) deleteClaimRes()              {}
func (*R400) deleteGroupLinkRes()          {}
func (*R400) deleteUserRes()               {}
func (*R400) listClaimClaimGroupsRes()     {}
func (*R400) listClaimGroupClaimsRes()     {}
func (*R400) listClaimGroupGroupLinksRes() {}
func (*R400) listClaimGroupRes()           {}
func (*R400) listClaimGroupUsersRes()      {}
func (*R400) listClaimRes()                {}
func (*R400) listGroupLinkRes()            {}
func (*R400) listPrivateKeyRes()           {}
func (*R400) listUserClaimGroupsRes()      {}
func (*R400) listUserRes()                 {}
func (*R400) readClaimGroupRes()           {}
func (*R400) readClaimRes()                {}
func (*R400) readGroupLinkClaimGroupRes()  {}
func (*R400) readGroupLinkRes()            {}
func (*R400) readPrivateKeyRes()           {}
func (*R400) readUserRes()                 {}
func (*R400) updateClaimGroupRes()         {}
func (*R400) updateClaimRes()              {}
func (*R400) updateGroupLinkRes()          {}
func (*R400) updateUserRes()               {}

type R404 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R404) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R404) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R404) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R404) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R404) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R404) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R404) deleteClaimGroupRes()         {}
func (*R404) deleteClaimRes()              {}
func (*R404) deleteGroupLinkRes()          {}
func (*R404) deleteUserRes()               {}
func (*R404) listClaimClaimGroupsRes()     {}
func (*R404) listClaimGroupClaimsRes()     {}
func (*R404) listClaimGroupGroupLinksRes() {}
func (*R404) listClaimGroupRes()           {}
func (*R404) listClaimGroupUsersRes()      {}
func (*R404) listClaimRes()                {}
func (*R404) listGroupLinkRes()            {}
func (*R404) listPrivateKeyRes()           {}
func (*R404) listUserClaimGroupsRes()      {}
func (*R404) listUserRes()                 {}
func (*R404) readClaimGroupRes()           {}
func (*R404) readClaimRes()                {}
func (*R404) readGroupLinkClaimGroupRes()  {}
func (*R404) readGroupLinkRes()            {}
func (*R404) readPrivateKeyRes()           {}
func (*R404) readUserRes()                 {}
func (*R404) updateClaimGroupRes()         {}
func (*R404) updateClaimRes()              {}
func (*R404) updateGroupLinkRes()          {}
func (*R404) updateUserRes()               {}

type R409 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R409) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R409) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R409) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R409) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R409) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R409) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R409) createClaimGroupRes()         {}
func (*R409) createClaimRes()              {}
func (*R409) createGroupLinkRes()          {}
func (*R409) deleteClaimGroupRes()         {}
func (*R409) deleteClaimRes()              {}
func (*R409) deleteGroupLinkRes()          {}
func (*R409) deleteUserRes()               {}
func (*R409) listClaimClaimGroupsRes()     {}
func (*R409) listClaimGroupClaimsRes()     {}
func (*R409) listClaimGroupGroupLinksRes() {}
func (*R409) listClaimGroupRes()           {}
func (*R409) listClaimGroupUsersRes()      {}
func (*R409) listClaimRes()                {}
func (*R409) listGroupLinkRes()            {}
func (*R409) listPrivateKeyRes()           {}
func (*R409) listUserClaimGroupsRes()      {}
func (*R409) listUserRes()                 {}
func (*R409) readClaimGroupRes()           {}
func (*R409) readClaimRes()                {}
func (*R409) readGroupLinkClaimGroupRes()  {}
func (*R409) readGroupLinkRes()            {}
func (*R409) readPrivateKeyRes()           {}
func (*R409) readUserRes()                 {}
func (*R409) updateClaimGroupRes()         {}
func (*R409) updateClaimRes()              {}
func (*R409) updateGroupLinkRes()          {}
func (*R409) updateUserRes()               {}

type R500 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R500) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R500) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R500) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R500) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R500) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R500) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R500) createClaimGroupRes()         {}
func (*R500) createClaimRes()              {}
func (*R500) createGroupLinkRes()          {}
func (*R500) deleteClaimGroupRes()         {}
func (*R500) deleteClaimRes()              {}
func (*R500) deleteGroupLinkRes()          {}
func (*R500) deleteUserRes()               {}
func (*R500) listClaimClaimGroupsRes()     {}
func (*R500) listClaimGroupClaimsRes()     {}
func (*R500) listClaimGroupGroupLinksRes() {}
func (*R500) listClaimGroupRes()           {}
func (*R500) listClaimGroupUsersRes()      {}
func (*R500) listClaimRes()                {}
func (*R500) listGroupLinkRes()            {}
func (*R500) listPrivateKeyRes()           {}
func (*R500) listUserClaimGroupsRes()      {}
func (*R500) listUserRes()                 {}
func (*R500) readClaimGroupRes()           {}
func (*R500) readClaimRes()                {}
func (*R500) readGroupLinkClaimGroupRes()  {}
func (*R500) readGroupLinkRes()            {}
func (*R500) readPrivateKeyRes()           {}
func (*R500) readUserRes()                 {}
func (*R500) updateClaimGroupRes()         {}
func (*R500) updateClaimRes()              {}
func (*R500) updateGroupLinkRes()          {}
func (*R500) updateUserRes()               {}

type RefreshOK struct {
	// JWT Token.
	Token string `json:"token"`
	// Token to get a new token with the same claims. Must be used before token expires.
	Refresh string `json:"refresh"`
}

// GetToken returns the value of Token.
func (s *RefreshOK) GetToken() string {
	return s.Token
}

// GetRefresh returns the value of Refresh.
func (s *RefreshOK) GetRefresh() string {
	return s.Refresh
}

// SetToken sets the value of Token.
func (s *RefreshOK) SetToken(val string) {
	s.Token = val
}

// SetRefresh sets the value of Refresh.
func (s *RefreshOK) SetRefresh(val string) {
	s.Refresh = val
}

func (*RefreshOK) refreshRes() {}

// User credentials.
type RefreshReq struct {
	// Refresh token. Must match the token used in authentication.
	Refresh string `json:"refresh"`
}

// GetRefresh returns the value of Refresh.
func (s *RefreshReq) GetRefresh() string {
	return s.Refresh
}

// SetRefresh sets the value of Refresh.
func (s *RefreshReq) SetRefresh(val string) {
	s.Refresh = val
}

type RefreshUnauthorized struct {
	// Error Message.
	Message OptString `json:"message"`
}

// GetMessage returns the value of Message.
func (s *RefreshUnauthorized) GetMessage() OptString {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *RefreshUnauthorized) SetMessage(val OptString) {
	s.Message = val
}

func (*RefreshUnauthorized) refreshRes() {}

type Token struct {
	Token string
}

// GetToken returns the value of Token.
func (s *Token) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *Token) SetToken(val string) {
	s.Token = val
}

type TotalsOK struct {
	// Count of users.
	Users int `json:"users"`
	// Count of claims.
	Claims int `json:"claims"`
	// Count of claim groups.
	ClaimGroups int `json:"claim_groups"`
}

// GetUsers returns the value of Users.
func (s *TotalsOK) GetUsers() int {
	return s.Users
}

// GetClaims returns the value of Claims.
func (s *TotalsOK) GetClaims() int {
	return s.Claims
}

// GetClaimGroups returns the value of ClaimGroups.
func (s *TotalsOK) GetClaimGroups() int {
	return s.ClaimGroups
}

// SetUsers sets the value of Users.
func (s *TotalsOK) SetUsers(val int) {
	s.Users = val
}

// SetClaims sets the value of Claims.
func (s *TotalsOK) SetClaims(val int) {
	s.Claims = val
}

// SetClaimGroups sets the value of ClaimGroups.
func (s *TotalsOK) SetClaimGroups(val int) {
	s.ClaimGroups = val
}

type UpdateClaimGroupReq struct {
	Name        OptString `json:"name"`
	Description OptString `json:"description"`
	Users       []int     `json:"users"`
	GroupLinks  []int     `json:"group_links"`
	Claims      []int     `json:"claims"`
}

// GetName returns the value of Name.
func (s *UpdateClaimGroupReq) GetName() OptString {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *UpdateClaimGroupReq) GetDescription() OptString {
	return s.Description
}

// GetUsers returns the value of Users.
func (s *UpdateClaimGroupReq) GetUsers() []int {
	return s.Users
}

// GetGroupLinks returns the value of GroupLinks.
func (s *UpdateClaimGroupReq) GetGroupLinks() []int {
	return s.GroupLinks
}

// GetClaims returns the value of Claims.
func (s *UpdateClaimGroupReq) GetClaims() []int {
	return s.Claims
}

// SetName sets the value of Name.
func (s *UpdateClaimGroupReq) SetName(val OptString) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *UpdateClaimGroupReq) SetDescription(val OptString) {
	s.Description = val
}

// SetUsers sets the value of Users.
func (s *UpdateClaimGroupReq) SetUsers(val []int) {
	s.Users = val
}

// SetGroupLinks sets the value of GroupLinks.
func (s *UpdateClaimGroupReq) SetGroupLinks(val []int) {
	s.GroupLinks = val
}

// SetClaims sets the value of Claims.
func (s *UpdateClaimGroupReq) SetClaims(val []int) {
	s.Claims = val
}

type UpdateClaimReq struct {
	Name        OptString `json:"name"`
	ShortName   OptString `json:"short_name"`
	Value       OptString `json:"value"`
	Description OptString `json:"description"`
	ClaimGroups []int     `json:"claim_groups"`
}

// GetName returns the value of Name.
func (s *UpdateClaimReq) GetName() OptString {
	return s.Name
}

// GetShortName returns the value of ShortName.
func (s *UpdateClaimReq) GetShortName() OptString {
	return s.ShortName
}

// GetValue returns the value of Value.
func (s *UpdateClaimReq) GetValue() OptString {
	return s.Value
}

// GetDescription returns the value of Description.
func (s *UpdateClaimReq) GetDescription() OptString {
	return s.Description
}

// GetClaimGroups returns the value of ClaimGroups.
func (s *UpdateClaimReq) GetClaimGroups() []int {
	return s.ClaimGroups
}

// SetName sets the value of Name.
func (s *UpdateClaimReq) SetName(val OptString) {
	s.Name = val
}

// SetShortName sets the value of ShortName.
func (s *UpdateClaimReq) SetShortName(val OptString) {
	s.ShortName = val
}

// SetValue sets the value of Value.
func (s *UpdateClaimReq) SetValue(val OptString) {
	s.Value = val
}

// SetDescription sets the value of Description.
func (s *UpdateClaimReq) SetDescription(val OptString) {
	s.Description = val
}

// SetClaimGroups sets the value of ClaimGroups.
func (s *UpdateClaimReq) SetClaimGroups(val []int) {
	s.ClaimGroups = val
}

type UpdateGroupLinkReq struct {
	Type         OptString `json:"type"`
	ResourceSpec OptString `json:"resource_spec"`
	ClaimGroup   OptInt    `json:"claim_group"`
}

// GetType returns the value of Type.
func (s *UpdateGroupLinkReq) GetType() OptString {
	return s.Type
}

// GetResourceSpec returns the value of ResourceSpec.
func (s *UpdateGroupLinkReq) GetResourceSpec() OptString {
	return s.ResourceSpec
}

// GetClaimGroup returns the value of ClaimGroup.
func (s *UpdateGroupLinkReq) GetClaimGroup() OptInt {
	return s.ClaimGroup
}

// SetType sets the value of Type.
func (s *UpdateGroupLinkReq) SetType(val OptString) {
	s.Type = val
}

// SetResourceSpec sets the value of ResourceSpec.
func (s *UpdateGroupLinkReq) SetResourceSpec(val OptString) {
	s.ResourceSpec = val
}

// SetClaimGroup sets the value of ClaimGroup.
func (s *UpdateGroupLinkReq) SetClaimGroup(val OptInt) {
	s.ClaimGroup = val
}

type UpdateLocalUserPasswordBadRequest struct {
	// Error Message.
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *UpdateLocalUserPasswordBadRequest) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *UpdateLocalUserPasswordBadRequest) SetMessage(val string) {
	s.Message = val
}

func (*UpdateLocalUserPasswordBadRequest) updateLocalUserPasswordRes() {}

type UpdateLocalUserPasswordOK struct {
	Message OptString `json:"message"`
}

// GetMessage returns the value of Message.
func (s *UpdateLocalUserPasswordOK) GetMessage() OptString {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *UpdateLocalUserPasswordOK) SetMessage(val OptString) {
	s.Message = val
}

func (*UpdateLocalUserPasswordOK) updateLocalUserPasswordRes() {}

// Password update data.
type UpdateLocalUserPasswordReq struct {
	// User's username.
	Username string `json:"username"`
	// Old user password.
	OldPassword OptString `json:"oldPassword"`
	// New user password.
	NewPassword string `json:"newPassword"`
	// Set to change user's password without checking the old password.
	Force OptBool `json:"force"`
}

// GetUsername returns the value of Username.
func (s *UpdateLocalUserPasswordReq) GetUsername() string {
	return s.Username
}

// GetOldPassword returns the value of OldPassword.
func (s *UpdateLocalUserPasswordReq) GetOldPassword() OptString {
	return s.OldPassword
}

// GetNewPassword returns the value of NewPassword.
func (s *UpdateLocalUserPasswordReq) GetNewPassword() string {
	return s.NewPassword
}

// GetForce returns the value of Force.
func (s *UpdateLocalUserPasswordReq) GetForce() OptBool {
	return s.Force
}

// SetUsername sets the value of Username.
func (s *UpdateLocalUserPasswordReq) SetUsername(val string) {
	s.Username = val
}

// SetOldPassword sets the value of OldPassword.
func (s *UpdateLocalUserPasswordReq) SetOldPassword(val OptString) {
	s.OldPassword = val
}

// SetNewPassword sets the value of NewPassword.
func (s *UpdateLocalUserPasswordReq) SetNewPassword(val string) {
	s.NewPassword = val
}

// SetForce sets the value of Force.
func (s *UpdateLocalUserPasswordReq) SetForce(val OptBool) {
	s.Force = val
}

type UpdateUserReq struct {
	Fname       OptString `json:"fname"`
	Lname       OptString `json:"lname"`
	Source      OptString `json:"source"`
	Email       OptString `json:"email"`
	Username    OptString `json:"username"`
	ClaimGroups []int     `json:"claim_groups"`
}

// GetFname returns the value of Fname.
func (s *UpdateUserReq) GetFname() OptString {
	return s.Fname
}

// GetLname returns the value of Lname.
func (s *UpdateUserReq) GetLname() OptString {
	return s.Lname
}

// GetSource returns the value of Source.
func (s *UpdateUserReq) GetSource() OptString {
	return s.Source
}

// GetEmail returns the value of Email.
func (s *UpdateUserReq) GetEmail() OptString {
	return s.Email
}

// GetUsername returns the value of Username.
func (s *UpdateUserReq) GetUsername() OptString {
	return s.Username
}

// GetClaimGroups returns the value of ClaimGroups.
func (s *UpdateUserReq) GetClaimGroups() []int {
	return s.ClaimGroups
}

// SetFname sets the value of Fname.
func (s *UpdateUserReq) SetFname(val OptString) {
	s.Fname = val
}

// SetLname sets the value of Lname.
func (s *UpdateUserReq) SetLname(val OptString) {
	s.Lname = val
}

// SetSource sets the value of Source.
func (s *UpdateUserReq) SetSource(val OptString) {
	s.Source = val
}

// SetEmail sets the value of Email.
func (s *UpdateUserReq) SetEmail(val OptString) {
	s.Email = val
}

// SetUsername sets the value of Username.
func (s *UpdateUserReq) SetUsername(val OptString) {
	s.Username = val
}

// SetClaimGroups sets the value of ClaimGroups.
func (s *UpdateUserReq) SetClaimGroups(val []int) {
	s.ClaimGroups = val
}

// Ref: #/components/schemas/User_ClaimGroupsList
type UserClaimGroupsList struct {
	ID          int    `json:"id"`
	Name        string `json:"name"`
	Description string `json:"description"`
}

// GetID returns the value of ID.
func (s *UserClaimGroupsList) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *UserClaimGroupsList) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *UserClaimGroupsList) GetDescription() string {
	return s.Description
}

// SetID sets the value of ID.
func (s *UserClaimGroupsList) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *UserClaimGroupsList) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *UserClaimGroupsList) SetDescription(val string) {
	s.Description = val
}

// Ref: #/components/schemas/UserList
type UserList struct {
	ID        int       `json:"id"`
	Fname     string    `json:"fname"`
	Lname     string    `json:"lname"`
	Source    string    `json:"source"`
	Email     string    `json:"email"`
	Username  string    `json:"username"`
	CreatedAt time.Time `json:"created_at"`
}

// GetID returns the value of ID.
func (s *UserList) GetID() int {
	return s.ID
}

// GetFname returns the value of Fname.
func (s *UserList) GetFname() string {
	return s.Fname
}

// GetLname returns the value of Lname.
func (s *UserList) GetLname() string {
	return s.Lname
}

// GetSource returns the value of Source.
func (s *UserList) GetSource() string {
	return s.Source
}

// GetEmail returns the value of Email.
func (s *UserList) GetEmail() string {
	return s.Email
}

// GetUsername returns the value of Username.
func (s *UserList) GetUsername() string {
	return s.Username
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserList) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *UserList) SetID(val int) {
	s.ID = val
}

// SetFname sets the value of Fname.
func (s *UserList) SetFname(val string) {
	s.Fname = val
}

// SetLname sets the value of Lname.
func (s *UserList) SetLname(val string) {
	s.Lname = val
}

// SetSource sets the value of Source.
func (s *UserList) SetSource(val string) {
	s.Source = val
}

// SetEmail sets the value of Email.
func (s *UserList) SetEmail(val string) {
	s.Email = val
}

// SetUsername sets the value of Username.
func (s *UserList) SetUsername(val string) {
	s.Username = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserList) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// Ref: #/components/schemas/UserRead
type UserRead struct {
	ID        int       `json:"id"`
	Fname     string    `json:"fname"`
	Lname     string    `json:"lname"`
	Source    string    `json:"source"`
	Email     string    `json:"email"`
	Username  string    `json:"username"`
	CreatedAt time.Time `json:"created_at"`
}

// GetID returns the value of ID.
func (s *UserRead) GetID() int {
	return s.ID
}

// GetFname returns the value of Fname.
func (s *UserRead) GetFname() string {
	return s.Fname
}

// GetLname returns the value of Lname.
func (s *UserRead) GetLname() string {
	return s.Lname
}

// GetSource returns the value of Source.
func (s *UserRead) GetSource() string {
	return s.Source
}

// GetEmail returns the value of Email.
func (s *UserRead) GetEmail() string {
	return s.Email
}

// GetUsername returns the value of Username.
func (s *UserRead) GetUsername() string {
	return s.Username
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserRead) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *UserRead) SetID(val int) {
	s.ID = val
}

// SetFname sets the value of Fname.
func (s *UserRead) SetFname(val string) {
	s.Fname = val
}

// SetLname sets the value of Lname.
func (s *UserRead) SetLname(val string) {
	s.Lname = val
}

// SetSource sets the value of Source.
func (s *UserRead) SetSource(val string) {
	s.Source = val
}

// SetEmail sets the value of Email.
func (s *UserRead) SetEmail(val string) {
	s.Email = val
}

// SetUsername sets the value of Username.
func (s *UserRead) SetUsername(val string) {
	s.Username = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserRead) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

func (*UserRead) readUserRes() {}

// Ref: #/components/schemas/UserUpdate
type UserUpdate struct {
	ID        int       `json:"id"`
	Fname     string    `json:"fname"`
	Lname     string    `json:"lname"`
	Source    string    `json:"source"`
	Email     string    `json:"email"`
	Username  string    `json:"username"`
	CreatedAt time.Time `json:"created_at"`
}

// GetID returns the value of ID.
func (s *UserUpdate) GetID() int {
	return s.ID
}

// GetFname returns the value of Fname.
func (s *UserUpdate) GetFname() string {
	return s.Fname
}

// GetLname returns the value of Lname.
func (s *UserUpdate) GetLname() string {
	return s.Lname
}

// GetSource returns the value of Source.
func (s *UserUpdate) GetSource() string {
	return s.Source
}

// GetEmail returns the value of Email.
func (s *UserUpdate) GetEmail() string {
	return s.Email
}

// GetUsername returns the value of Username.
func (s *UserUpdate) GetUsername() string {
	return s.Username
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserUpdate) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *UserUpdate) SetID(val int) {
	s.ID = val
}

// SetFname sets the value of Fname.
func (s *UserUpdate) SetFname(val string) {
	s.Fname = val
}

// SetLname sets the value of Lname.
func (s *UserUpdate) SetLname(val string) {
	s.Lname = val
}

// SetSource sets the value of Source.
func (s *UserUpdate) SetSource(val string) {
	s.Source = val
}

// SetEmail sets the value of Email.
func (s *UserUpdate) SetEmail(val string) {
	s.Email = val
}

// SetUsername sets the value of Username.
func (s *UserUpdate) SetUsername(val string) {
	s.Username = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserUpdate) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

func (*UserUpdate) updateUserRes() {}
