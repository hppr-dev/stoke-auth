
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

		upstream control {
			server control:8080;
		}
		upstream inventory {
			server inventory:8080;
		}

		server {
			listen              443 ssl;
      server_name         localhost;

      ssl_certificate     /etc/nginx/ui.crt;
      ssl_certificate_key /etc/nginx/ui.key;
      ssl_protocols       TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
      ssl_ciphers         HIGH:!aNULL:!MD5;

			location / {
				root /usr/share/nginx/html/;
			}

			location /api/login {
				proxy_pass https://172.17.0.1:8080;
			}

			location /control/ {
				rewrite ^/control/(.*) /$1  break;
				proxy_pass https://control;
			}

			# websocket connection
			location /control/foobar {
				rewrite ^/control/(.*) /$1  break;
				proxy_http_version 1.1;
				proxy_set_header Upgrade $http_upgrade;
				proxy_set_header Connection "upgrade";
				proxy_set_header Host $http_host;
				proxy_pass https://control;
			}

			location /request/ {
				rewrite /request/(.*) /$1  break;
				proxy_pass http://request:8080;
			}

			location /inventory/ {
				rewrite /inventory/(.*) /$1  break;
				proxy_pass http://inventory;
			}

			# websocket connection
			location /inventory/load_cargo/ {
				rewrite ^/inventory/(.*) /$1  break;
				proxy_http_version 1.1;
				proxy_set_header Upgrade $http_upgrade;
				proxy_set_header Connection "upgrade";
				proxy_set_header Host $http_host;
				proxy_pass http://inventory;
			}
		}
}

