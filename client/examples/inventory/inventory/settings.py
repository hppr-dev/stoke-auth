"""
Django settings for inventory project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
from stoke.client import StokeClient

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-r+768kjtwy-gy2opfv^-sm*67n($d7ijx1pn%)jw%&!oz6c3-1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

# Stoke Configuration
"""
    Auth backend to use a stoke server to authenticate
    Requires the following settings:
      * STOKE_AUTH_CONFIG  -- a dictionary defining the configuration for the stoke server.

    The STOKE_AUTH_CONFIG dictionary MUST have the following keys:
      * CLIENT : StokeClient | TestStokeClient -- the client to use when verifying tokens
      * BASE_CLAIMS : dict[str, str] -- the minimum claims that a user needs to authenticate
      * USERNAME : str -- the claim key to use as a user's username

    Optional settings:
      * ROUTE_CLAIMS : dict[str, dict[str, str]] -- a dictionary of route paths and their required claims
      * STAFF: 2-tuple -- the claim (key, value) to use to determine if a user is staff
      * SUPERUSER : 2-tuple -- the claim (key, value) to use to determine if a user is a superuser
      * FIRST_NAME : str -- the claim key to lookup a user's first name
      * LAST_NAME: str -- the claim key to lookup a user's last name
      * EMAIL: str -- the claim key to lookup a user's email
"""

STOKE_AUTH_CONFIG = {
    'CLIENT' : StokeClient("http://172.17.0.1:8080"),
#    'BASE_CLAIMS': { "inv" : "acc" },
    'USERNAME' : 'u',
    'EMAIL': 'e',
    'SUPERUSER' : ('srol', 'spr'),
    'STAFF' : ('srol', 'spr'),
}

AUTHENTICATION_BACKENDS = [
    'stoke.django_auth_backend.StokeAuthBackend',
    'django.contrib.auth.backends.ModelBackend'
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'inventory.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'inventory.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
